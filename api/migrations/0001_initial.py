# Generated by Django 3.2.9 on 2021-11-01 12:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='Имя пользователя')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=30, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='static/media/', verbose_name='Фотография')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Суперадмин?')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Админ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_set', related_query_name='group', to='auth.group', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'сотрудник',
                'verbose_name_plural': 'сотрудники',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'город',
                'verbose_name_plural': 'города',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=45, verbose_name='ФИО')),
                ('gender', models.CharField(choices=[('ЖЕНЩИНА', 'Женщина'), ('МУЖЧИНА', 'Мужчина')], default='МУЖЧИНА', max_length=7, verbose_name='Пол')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('place_of_birth', models.CharField(max_length=200, verbose_name='Место рождения')),
                ('status', models.CharField(choices=[('ОБЫЧНЫЙ', 'Обычный'), ('VIP', 'Vip'), ('ПРИВИЛЕГИРОВАННЫЙ', 'Привилегированный')], default='ОБЫЧНЫЙ', max_length=17, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_start', models.DateField(verbose_name='Дата начала путешествия')),
                ('date_of_end', models.DateField(verbose_name='Дата завершения путешествия')),
                ('money_sum', models.FloatField(verbose_name='Сумма')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'контракт',
                'verbose_name_plural': 'контракты',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'страна',
                'verbose_name_plural': 'страны',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=45, verbose_name='Код валюты')),
                ('currency', models.FloatField(verbose_name='Курс')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'курс валюты',
                'verbose_name_plural': 'курсы валют',
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Название')),
                ('category', models.CharField(choices=[('ПЯТИЗВЕЗДОЧНЫЙ', 'Пятизвездочный'), ('ЧЕТЫРЕХЗВЕЗДОЧНЫЙ', 'Четырехзвездочный'), ('ТРЕХЗВЕЗДОЧНЫЙ', 'Трехзвездочный'), ('ДВУХЗВЕЗДОЧНЫЙ ', 'Двухзвездочный'), ('ОДНОЗВЕЗДОЧНЫЙ', 'Однозвездочный '), ('АПАРТАМЕНТЫ ', 'Апартаменты')], default='ЧЕТЫРЕХЗВЕЗДОЧНЫЙ', max_length=17, verbose_name='Категория')),
                ('address', models.CharField(max_length=200, verbose_name='Адрес')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'отель',
                'verbose_name_plural': 'отели',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Название')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('phone', models.CharField(max_length=45, verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'организация',
                'verbose_name_plural': 'организации',
            },
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_series', models.IntegerField(verbose_name='Серия')),
                ('pass_number', models.IntegerField(verbose_name='Номер')),
                ('date_of_receiving', models.DateField(verbose_name='Дата получения')),
                ('date_of_expiry', models.DateField(verbose_name='Срок действия')),
                ('place_of_issue', models.CharField(max_length=200, verbose_name='Место получения')),
                ('type', models.CharField(choices=[('ЗАГРАНПАСПОРТ', 'Загранпаспорт'), ('ПАСПОРТ РФ', 'Паспорт РФ')], default='ПАСПОРТ РФ', max_length=13, verbose_name='Тип паспорта')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'паспорт',
                'verbose_name_plural': 'паспорта',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_expired', models.DateField(verbose_name='Дата истечения срока платежа')),
                ('date_payment', models.DateField(blank=True, null=True, verbose_name='Дата успешной оплаты')),
                ('isPayed', models.BooleanField(default=False, verbose_name='Оплачен?')),
                ('amount_in_rouble', models.FloatField(verbose_name='Сумма в рублях')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.contract', verbose_name='Контракт')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Бухгалтер')),
            ],
            options={
                'verbose_name': 'платеж',
                'verbose_name_plural': 'платежи',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Название')),
                ('number_of_beds', models.IntegerField(default=1, verbose_name='Количество кроватей')),
                ('number_of_clients', models.IntegerField(default=1, verbose_name='Максимальное количество гостей')),
                ('balcony', models.BooleanField(default=False, verbose_name='Есть балкон?')),
                ('food_included', models.BooleanField(default=False, verbose_name='Включена еда?')),
                ('is_free', models.BooleanField(default=False, verbose_name='Номер занят?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.hotel', verbose_name='Отель')),
            ],
            options={
                'verbose_name': 'номер',
                'verbose_name_plural': 'номера',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Начало маршрута')),
                ('end_date', models.DateField(verbose_name='Конец маршрута')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.city', verbose_name='Город')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.hotel', verbose_name='Отель')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.room', verbose_name='Номер в отеле')),
            ],
            options={
                'verbose_name': 'маршрут',
                'verbose_name_plural': 'маршруты',
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_included', models.BooleanField(default=False, verbose_name='Трансфер включен?')),
                ('travel_docs', models.CharField(max_length=255, verbose_name='Документы')),
                ('transport', models.CharField(choices=[('БЕЗ ТРАНСФЕРА', 'Без трансфера'), ('АВТОМОБИЛЬ', 'Автомобиль'), ('АВТОБУС', 'Автобус')], default='БЕЗ ТРАНСФЕРА', max_length=13, verbose_name='Транспорт')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.payment', verbose_name='Платеж')),
            ],
            options={
                'verbose_name': 'ваучер',
                'verbose_name_plural': 'ваучеры',
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.country', verbose_name='Страна')),
                ('routes', models.ManyToManyField(to='api.Route', verbose_name='Маршруты')),
            ],
            options={
                'verbose_name': 'тур',
                'verbose_name_plural': 'туры',
            },
        ),
        migrations.CreateModel(
            name='PreAgreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_start', models.DateField(verbose_name='Дата начала тура')),
                ('date_of_end', models.DateField(verbose_name='Дата окончания тура')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cities_to_visit', models.ManyToManyField(to='api.City', verbose_name='Города посещения')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client', verbose_name='Клиент')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'предварительное соглашение',
                'verbose_name_plural': 'предварительные соглашения',
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.currency', verbose_name='Валюта'),
        ),
        migrations.AddField(
            model_name='contract',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник'),
        ),
        migrations.AddField(
            model_name='contract',
            name='pre_agreement',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.preagreement', verbose_name='Предварительное соглашение'),
        ),
        migrations.AddField(
            model_name='contract',
            name='tour',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='api.tour', verbose_name='Тур'),
        ),
        migrations.AddField(
            model_name='contract',
            name='tourists',
            field=models.ManyToManyField(to='api.Client', verbose_name='Туристы'),
        ),
        migrations.AddField(
            model_name='client',
            name='international_passport',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='international_passport', to='api.passport', verbose_name='Загранпаспорт'),
        ),
        migrations.AddField(
            model_name='client',
            name='russian_passport',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='russian_passport', to='api.passport', verbose_name='Паспорт РФ'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.country', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='employee',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organization_set', related_query_name='organization', to='api.organization', verbose_name='Организация'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
